{"version":3,"sources":["components/Container/Container.js","components/ScoreBoard/ScoreBoard.js","components/GameSettings/GameSettings.js","helpers/helpers.js","components/Cell/Cell.js","components/Game/Game.js","controller/newCell.js","constants/directios.js","controller/move.js","controller/gridHelpers.js","controller/gameInit.js","themes.js","components/GameOver/GameOver.js","App.js","index.js"],"names":["Main","styled","main","_templateObject","props","theme","background","Content","div","_templateObject2","Container","_ref","children","react_default","a","createElement","ScoreBoard","score","bestScore","Wrapper","GameNameLabel","Scores","Box","Label","Score","defaultProps","ScoreBoard_templateObject","ScoreBoard_templateObject2","labelColor","_templateObject3","_templateObject4","primaryColor","_templateObject5","_templateObject6","white","GameSettings","selectedTheme","changeTheme","newGame","GameSettings_Wrapper","MoonButton","onClick","role","aria-label","NewGame","GameSettings_Label","GameSettings_templateObject","button","GameSettings_templateObject2","GameSettings_templateObject3","GameSettings_templateObject4","fontSizeCalculater","value","Cell","x","y","color","cellStyle","Object","objectWithoutProperties","gridColumn","concat","gridRow","fontSize","backgroundColor","Cell_Box","style","Cell_templateObject","_ref2","cellColor","_ref3","cellLabel","Game","cells","size","Game_Wrapper","Grid","Array","from","_","i","map","Cell_Cell","key","Playground","row","Game_templateObject","Game_templateObject2","Game_templateObject3","getRandom","Math","floor","random","newCell","grid","options","length","j","push","spot","directions","UP","DOWN","LEFT","RIGHT","mapKeyCodeToDirection","KeyA","KeyS","KeyD","KeyW","ArrowLeft","ArrowDown","ArrowRight","ArrowUp","move","direction","flipped","rotated","flipGrid","rotateGrid","oldGrid","cloneDeep","operate","changed","newGrid","compareGrid","gameOver","isGameOver","blankGrid","slideRow","arr","filter","val","missing","fill","reverse","b","point","combineRow","gameInit","themes","light","secondaryColor","cellColor_2","cellColor_4","cellColor_8","cellColor_16","cellColor_32","cellColor_64","cellColor_128","cellColor_256","cellColor_512","cellColor_1024","cellColor_2048","dark","GameOver_templateObject","GameOver_templateObject2","GameOver","GameOver_Wrapper","GameOver_Content","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setState","state","_objectSpread","handleKeyPress","event","code","_move","document","addEventListener","removeEventListener","_this$state","styled_components_browser_esm","Container_Container","App_Wrapper","ScoreBoard_ScoreBoard","GameSettings_GameSettings","GameOver_GameOver","Game_Game","Component","App_templateObject","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.89d86713.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nfunction Container({ children }) {\n  return (\n    <Main>\n      <Content>{children}</Content>\n    </Main>\n  );\n}\n\nconst Main = styled.main`\n  align-items: center;\n  display: flex;\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  justify-content: center;\n  background-color: ${props => props.theme.background};\n`;\n\nconst Content = styled.div`\n  width: 420px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nScoreBoard.propTypes = {\n  score: PropTypes.number,\n  bestScore: PropTypes.number,\n};\n\nScoreBoard.defaultProps = {\n  score: 0,\n  bestScore: 0,\n};\n\nfunction ScoreBoard({ score, bestScore }) {\n  return (\n    <Wrapper>\n      <GameNameLabel>2048</GameNameLabel>\n      <Scores>\n        <Box>\n          <Label>Score</Label>\n          <Score>{score}</Score>\n        </Box>\n        <Box>\n          <Label>Best</Label>\n          <Score>{bestScore}</Score>\n        </Box>\n      </Scores>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst GameNameLabel = styled.div`\n  font-weight: bold;\n  font-size: 4em;\n  text-align: center;\n  color: ${props => props.theme.labelColor};\n`;\n\nconst Scores = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: flex-end;\n`;\n\nconst Box = styled.div`\n  min-width: 75px;\n  text-align: center;\n  justify-content: center;\n  background-color: ${props => props.theme.primaryColor};\n  margin-left: 5px;\n  padding: 5px;\n  border-radius: 5px;\n`;\n\nconst Label = styled.div`\n  color: ${props => props.theme.labelColor};\n  font-weight: bold;\n  font-size: 15px;\n  padding: 5px;\n  text-transform: uppercase;\n`;\n\nconst Score = styled.div`\n  color: ${props => props.theme.white};\n  font-weight: bold;\n  font-size: 30px;\n  left: 0;\n`;\n\nexport default ScoreBoard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nGameSettings.propTypes = {\n  selectedTheme: PropTypes.string,\n  changeTheme: PropTypes.func,\n  newGame: PropTypes.func,\n};\n\nGameSettings.defaultProps = {\n  selectedTheme: 'light',\n};\n\nfunction GameSettings({ selectedTheme, changeTheme, newGame }) {\n  return (\n    <Wrapper>\n      <MoonButton onClick={changeTheme}>\n        {selectedTheme === 'light' ? (\n          <span role=\"img\" aria-label={selectedTheme}>\n            🌒\n          </span>\n        ) : (\n          <span role=\"img\" aria-label={selectedTheme}>\n            🌔\n          </span>\n        )}\n      </MoonButton>\n      <NewGame onClick={newGame}>\n        <Label>New Game</Label>\n      </NewGame>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 10px;\n`;\n\nconst MoonButton = styled.button`\n  background-color: transparent;\n  padding: 5px;\n  text-transform: capitalize;\n  font-size: 32px;\n  outline: none;\n  border: none;\n  cursor: pointer;\n`;\n\nconst NewGame = styled.button`\n  min-width: 100px;\n  text-align: center;\n  justify-content: center;\n  background-color: ${props => props.theme.primaryColor};\n  padding: 5px;\n  text-transform: capitalize;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n`;\n\nconst Label = styled.div`\n  color: ${props => props.theme.labelColor};\n  font-weight: bold;\n  font-size: 15px;\n  padding: 5px;\n`;\n\nexport default GameSettings;\n","export function fontSizeCalculater(value) {\n  const size = value < 100 ? 55 : value < 1000 ? 40 : value < 10000 ? 35 : 25;\n  return size;\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { fontSizeCalculater } from 'helpers';\n\nCell.propTypes = {\n  x: PropTypes.number,\n  y: PropTypes.number,\n  value: PropTypes.number,\n  color: PropTypes.string,\n};\n\nCell.defaultProps = {\n  color: 'secondaryColor',\n};\n\nfunction Cell({ x, y, value, color, ...rest }) {\n  let cellStyle = {};\n  if (x && y) {\n    cellStyle = {\n      gridColumn: `${x}/${x + 1}`,\n      gridRow: `${y}/${y + 1}`,\n      fontSize: fontSizeCalculater(value),\n    };\n  }\n\n  let backgroundColor = value ? `cellColor_${value}` : color;\n\n  return (\n    <Box x={x} y={y} value={value} style={cellStyle} backgroundColor={backgroundColor}>\n      {value}\n    </Box>\n  );\n}\n\nconst Box = styled.div`\n  background-color: ${({ theme, backgroundColor }) => theme[backgroundColor] || theme.cellColor};\n  color: ${({ theme, value }) => (value < 8 ? theme.cellLabel : theme.white)};\n  border-radius: 5px;\n  padding: 5px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 55px;\n  font-weight: bold;\n`;\n\nexport default Cell;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Cell from 'components/Cell';\n\nGame.propTypes = {\n  cells: PropTypes.array.isRequired,\n  size: PropTypes.number,\n  theme: PropTypes.string,\n};\n\nGame.defaultProps = {\n  size: 4,\n  theme: 'light',\n};\n\nfunction Game({ cells, size }) {\n  return (\n    <Wrapper>\n      <Grid size={size}>\n        {Array.from(new Array(size * size), (_, i) => i).map(i => (\n          <Cell key={i}/>\n        ))}\n      </Grid>\n      <Playground size={size}>\n        {cells.map((row, y) =>\n          row.map((value, x) => {\n            if (value === 0) return null;\n            return (\n              <Cell key={`key_${x}_${y}`} x={x + 1} y={y + 1} value={value}>\n                {value}\n              </Cell>\n            );\n          }),\n        )}\n      </Playground>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  border-radius: 5px;\n  background-color: ${props => props.theme.primaryColor};\n  height: 380px;\n  width: 380px;\n  padding: 10px;\n`;\n\nconst Grid = styled.div`\n  height: 380px;\n  width: 380px;\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: repeat(${({ size }) => size}, 1fr);\n  grid-template-rows: repeat(${({ size }) => size}, 1fr);\n  position: absolute;\n`;\n\nconst Playground = styled(Grid)`\n  background-color: transparent;\n`;\n\nexport default Game;\n","function getRandom(size) {\n  return Math.floor(Math.random() * size);\n}\n\nfunction newCell(grid) {\n  let options = [];\n  const size = grid[0].length;\n\n  for (let i = 0; i < size; i++) {\n    for (let j = 0; j < size; j++) {\n      if (grid[i][j] === 0) {\n        options.push({ x: i, y: j });\n      }\n    }\n  }\n  if (options.length > 0) {\n    const spot = options[getRandom(options.length)];\n    const value = getRandom(2) > 0 ? 2 : 4;\n    grid[spot.x][spot.y] = value;\n  }\n  return grid;\n}\n\nexport default newCell;\n","const directions = {\n  UP: 'UP',\n  DOWN: 'DOWN',\n  LEFT: 'LEFT',\n  RIGHT: 'RIGHT',\n};\n\nexport const mapKeyCodeToDirection = {\n  KeyA: directions.LEFT,\n  KeyS: directions.DOWN,\n  KeyD: directions.RIGHT,\n  KeyW: directions.UP,\n\n  ArrowLeft: directions.LEFT,\n  ArrowDown: directions.DOWN,\n  ArrowRight: directions.RIGHT,\n  ArrowUp: directions.UP,\n};\n\nexport default directions;\n","import { cloneDeep } from 'lodash';\n\nimport directions from '../constants/directios';\nimport newCell from './newCell';\nimport { rotateGrid, flipGrid, compareGrid, operate } from './gridHelpers';\n\nlet score = 0;\n\nfunction move(grid, direction) {\n  const size = grid[0].length;\n  let flipped = false;\n  let rotated = false;\n\n  if (direction === directions.LEFT) {\n    grid = flipGrid(grid);\n    flipped = true;\n  } else if (direction === directions.DOWN) {\n    grid = rotateGrid(grid);\n    rotated = true;\n  } else if (direction === directions.UP) {\n    grid = rotateGrid(grid);\n    grid = flipGrid(grid);\n    rotated = true;\n    flipped = true;\n  }\n\n  let oldGrid = cloneDeep(grid);\n  for (let i = 0; i < size; i++) {\n    grid[i] = operate(grid[i]);\n  }\n\n  const changed = compareGrid(oldGrid, grid);\n\n  if (flipped) {\n    grid = flipGrid(grid);\n  }\n\n  if (rotated) {\n    grid = rotateGrid(grid);\n    grid = rotateGrid(grid);\n    grid = rotateGrid(grid);\n  }\n\n  if (changed) {\n    grid = newCell(grid);\n  }\n\n  const gameOver = isGameOver(grid);\n\n  return { cells: grid, score, gameOver };\n}\n\nfunction isGameOver(grid) {\n  const size = grid[0].length;\n  for (let i = 0; i < size; i++) {\n    for (let j = 0; j < size; j++) {\n      if (grid[i][j] === 0) {\n        return false;\n      }\n      if (j !== 3 && grid[i][j] === grid[i][j + 1]) {\n        return false;\n      }\n      if (i !== 3 && grid[i][j] === grid[i + 1][j]) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nfunction scoreIncrease(point) {\n  score += point;\n}\n\nfunction setScore(newScore) {\n  score = newScore;\n}\n\nexport { scoreIncrease, setScore };\nexport default move;\n","import { scoreIncrease } from './move';\n\nfunction blankGrid(size) {\n  const grid = Array.from(new Array(size), () => Array.from(new Array(size), () => 0));\n  return grid;\n}\n\nfunction slideRow(row) {\n  let arr = row.filter(val => val);\n  let missing = row.length - arr.length;\n  let zeros = Array(missing).fill(0);\n  arr = zeros.concat(arr);\n  return arr;\n}\n\nfunction combineRow(row) {\n  for (let i = row.length - 1; i >= 1; i--) {\n    let a = row[i];\n    let b = row[i - 1];\n    if (a === b && (a !== 0 || b !== 0)) {\n      row[i] = a + b;\n      scoreIncrease(row[i]);\n      row[i - 1] = 0;\n    }\n  }\n  return row;\n}\n\nfunction rotateGrid(grid) {\n  const size = grid[0].length;\n  const newGrid = blankGrid(size);\n  for (let i = 0; i < size; i++) {\n    for (let j = 0; j < size; j++) {\n      newGrid[i][j] = grid[j][i];\n    }\n  }\n  return newGrid;\n}\n\nfunction flipGrid(grid) {\n  const size = grid[0].length;\n  for (let i = 0; i < size; i++) {\n    grid[i].reverse();\n  }\n  return grid;\n}\n\n// can be using isEqual(oldGrid.sort(), newGrid.sort()) (LODASH)\nfunction compareGrid(oldGrid, newGrid) {\n  const size = oldGrid[0].length;\n  for (let i = 0; i < size; i++) {\n    for (let j = 0; j < size; j++) {\n      if (oldGrid[i][j] !== newGrid[i][j]) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction operate(row) {\n  row = slideRow(row);\n  row = combineRow(row);\n  row = slideRow(row);\n  return row;\n}\n\nexport { slideRow, combineRow, blankGrid, rotateGrid, flipGrid, compareGrid, operate };\n","import newCell from './newCell';\nimport { blankGrid } from './gridHelpers';\nimport { setScore } from './move';\n\nfunction gameInit(size) {\n  let grid = blankGrid(size);\n  setScore(0);\n  grid = newCell(grid);\n  grid = newCell(grid);\n  return grid;\n}\n\nexport default gameInit;\n","const light = {\n  white: '#fff',\n  background: '#faf8ef',\n  primaryColor: '#bbad9f',\n  secondaryColor: '#cdc1b3',\n  labelColor: '#776e65',\n  cellLabel: '#776e65',\n\n  cellColor: '#eee4da',\n  cellColor_2: '#eee4da',\n  cellColor_4: '#eee1c9',\n  cellColor_8: '#f3b27a',\n  cellColor_16: '#f69664',\n  cellColor_32: '#f77c5f',\n  cellColor_64: '#f75f3b',\n  cellColor_128: '#edd073',\n  cellColor_256: '#edcc62',\n  cellColor_512: '#edc950',\n  cellColor_1024: '#edc53f',\n  cellColor_2048: '#edc22e',\n};\n\nconst dark = {\n  white: '#fff',\n  background: '#141d26',\n  primaryColor: '#243447',\n  secondaryColor: '#506680',\n  labelColor: '#506680',\n  cellLabel: '#FFF',\n\n  cellColor: '#96abc3',\n  cellColor_2: '#96abc3',\n  cellColor_4: '#609cde',\n  cellColor_8: '#004a9c',\n  cellColor_16: '#673ab7',\n  cellColor_32: '#bb26a1',\n  cellColor_64: '#500042',\n  cellColor_128: '#881030',\n  cellColor_256: '#e6104d',\n  cellColor_512: '#e61010',\n  cellColor_1024: '#7b0000',\n  cellColor_2048: '#000000',\n};\n\nconst themes = {\n  light,\n  dark,\n};\n\nexport default themes;\n","import React from 'react';\nimport styled from 'styled-components';\n\nfunction GameOver() {\n  return (\n    <Wrapper>\n      <Content>\n        <p>Game Over!</p>\n      </Content>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  width: 400px;\n  height: 400px;\n  position: absolute;\n  display: flex;\n  z-index: 2;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ theme }) => theme.white};;\n  opacity: 0.7;\n`;\n\nconst Content = styled.div`\n  font-weight: bold;\n  text-align: center;\n  font-size: 50px;\n  color: ${({ theme }) => theme.primaryColor};\n`;\n\nexport default GameOver;\n","import React, { Component } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport Container from 'components/Container';\nimport ScoreBoard from 'components/ScoreBoard';\nimport GameSettings from 'components/GameSettings';\nimport Game from 'components/Game';\n\nimport gameInit from 'controller/gameInit';\nimport move from 'controller/move';\nimport { mapKeyCodeToDirection } from 'constants/directios';\nimport themes from './themes';\nimport GameOver from './components/GameOver';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cells: gameInit(4),\n      score: 0,\n      size: 4,\n      selectedTheme: 'light',\n      gameOver: false,\n    };\n  }\n\n  newGame = () => {\n    this.setState(state => ({\n      ...state,\n      cells: gameInit(state.size),\n      score: 0,\n      gameOver: false,\n    }));\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress);\n  }\n\n  handleKeyPress = event => {\n    const { gameOver } = this.state;\n    if (!gameOver && mapKeyCodeToDirection[event.code]) {\n      const { cells, score, gameOver} = move(this.state.cells, mapKeyCodeToDirection[event.code]);\n      this.setState({\n        cells,\n        score,\n        gameOver\n      });\n    }\n  };\n\n  changeTheme = () => {\n    this.setState(state => ({\n      ...state,\n      selectedTheme: state.selectedTheme === 'light' ? 'dark' : 'light',\n    }));\n  };\n\n  render() {\n    const { cells, score, size, selectedTheme, gameOver } = this.state;\n    return (\n      <ThemeProvider theme={themes[selectedTheme]}>\n        <Container>\n          <Wrapper>\n            <ScoreBoard score={score} />\n            <GameSettings\n              selectedTheme={selectedTheme}\n              changeTheme={this.changeTheme}\n              newGame={this.newGame}\n            />\n          </Wrapper>\n          <Wrapper>\n            {gameOver && <GameOver />}\n            <Game cells={cells} size={size} />\n          </Wrapper>\n        </Container>\n      </ThemeProvider>\n    );\n  }\n}\n\nconst Wrapper = styled.div`\n  flex: 1;\n  padding: 10px;\n  flex-direction: column;\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}